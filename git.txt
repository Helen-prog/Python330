index.html

align = left | center | right | justify

	h1
h2
		h3
h4
	h5
		h6
		

Ctrl + /		
<!-- Комментарий -->

H20

open in browser

Ctrl + H
align="
style="text-align: 


*.jpg (*.jpeg)
*.png
*.gif

file:///D:/WEB326/HTML/form/form.html?name=Olga&psw=123456&pol=on#file.php
file:///D:/WEB326/HTML/form/form.html#file.php


  Создать web-страницу с адаптивным изображением
  шапки и футера и адаптивным видео

Montserrat 
800
700
600
500



JSON - представление объектов JS (формат данных)


http://f0844296.xsph.ru
http://f0844296.xsph.ru/index1.html
http://f0844296.xsph.ru/other.html


AJAX – технология взаимодействия с сервером без перезагрузки страницы. Технологии AJAX уже более 20 лет.
(появился в марте 1999 года)
Asynchronous
Javascript
And
XML (JSON)

http://localhost/ajax
http://localhost/ajax/new.html
http://127.0.0.1

current.json

{
	"current": {
		"usd": 90
	}
}






Win + R -> cmd
python

py

1.py

print('Hello world!')

python 1.py
py 1.py

IDLE

Ctrl + /

import keyword
keyword.kwlist

0 - 9
вонона - 1
вороны - 2, 3, 4
ворон - 5, 6, 7, 8, 9, 0

условие ? true : false

git --version
git --help

git init
- создание репозитория (создается один раз в пределать одного репозитория)

git status
- для просмотра в каком состоянии находится репозиторий

git add main.py
		-A, --all - будут отслеживаться файлы, которые находится в папке и во всех подпапках
		. - добавляет все файлы из текущей директории
		
git config --global user.name 'new user'
git config --global user.email 'test@mail.ru'

git commit -m "first commit"
- создание контрольной точки

.gitignore

text.txt
folder
	test.txt
	
readme.md

		
git branch
- показать ветки
git branch test
- созадать новую ветку

git branch -D test
- удалить ветку

git branch readme
git checkout readme
- перейти на ветку

git checkout master


master               readme
	main.py             main.py
	readme.md			readme.md
	new.py
						
git merge readme
- слияние веток

git branch -D readme

git log
- просмотр коммитов



Токен: 


Win + R -> control

Диспечер учетных данных

Учетные данные Windows

https://github.com

git remote add origin https://github.com/Helen-prog/Python330.git

git push -u origin master

e1be7fa24a32ca053adae7eaf7d6a7414d47fbbe

git status
1) git add .
2) git commit -m "added print"
3) git push

git clone https://github.com/Helen-prog/Python330.git
- склонировать репозиторий

git pull
- забрать данные с gitHub


сlass Имя:
	свойства (переменные, поля)
		- статические
		- динамические
	методы (функции)
		- статические  (нет self)
		- класса  (cls)
		- экземпляра класса (self)
	
	атрибуты = свойства + методы
	
	
Модификаторы доступа:
public (открытое свойство) - self.x
protected (при наследовании)  - self._x
private (закрытое свойство) - self.__x

Наследование

Базовый (родительский, суперкласс)
	Дочерний (класс-наследник, подкласс)
	

DRY (Don't Repeat Yourself) - не повторяйся!


group = [
 Student("Батодалаев", "Даши", 16, "ГК", "Web_011", 5),
 Student("Загидуллин", "Линар", 32, "РПО", "PD_011", 5),
 Graduate("Шугани", "Сергей", 15, "РПО", "PD_011", 5, "Защита персональных данных"),
 Teacher("Даньшин", "Андрей", 38, "Астрофизика", 110),
 Student("Маркин", "Даниил", 17, "ГК", "Python_011", 5),
 Teacher("Башкиров", "Алексей", 45, "Разработка приложений", 20)
]
for i in group:
 i.info()
 
 
geometry
	__init__.py
	rect.py
	sq.py
	trian.py



import sys
sys.path

car (пакет)
	__init__.py
	carclass.py
	elecrtocar.py
	
# marshal  (*.pyc)
# pickle
# json


dump() - сохраняет данне в открытый файл
load() - считывание данных из файла

dumps() - сохраняет данные в строку
loads() - считывает данные из стоки



[{},{},{},{},{}][{},{},{},{},{}]

pip install requests
pip install beautifulsoup4 или bs4


data.csv

Имя,Профессия,Год рождения
Виктор,Веб-дизайнер,1995
Игорь,Программист,1983
Роман,Администратор,1990

csv.reader()  => []
csv.DictReader()  => {}

csv.writer()  => []
csv.DictWrite()  => {}











